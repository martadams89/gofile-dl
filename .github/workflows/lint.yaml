# MegaLinter GitHub Action configuration file
# More info at https://megalinter.io
---
name: Lint and Test

on:
  push:
    branches: [main, master, dev]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-lint:
    name: Lint and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pylint flake8 black isort bandit mypy

      - name: Cache MegaLinter
        uses: actions/cache@v3
        id: megalinter-cache
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
            .venv
          key: ${{ runner.os }}-megalinter-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('.mega-linter.yaml') }}

      - name: MegaLinter
        uses: oxsecurity/megalinter/flavors/python@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' && contains(fromJSON('["refs/heads/main", "refs/heads/master"]'), github.ref) }}
          PYTHON_PYLINT_ARGUMENTS: "--disable=C0111,R0903 --max-line-length=100"
          PYTHON_FLAKE8_ARGUMENTS: "--max-line-length=100 --extend-ignore=E203"
          PYTHON_BLACK_ARGUMENTS: "--line-length=100"
          PYTHON_ISORT_ARGUMENTS: "--profile black"
          PARALLEL: "true"
          DOCKERFILE_HADOLINT_ARGUMENTS: "--ignore=DL3003,DL3018"

      - name: Check Docker build
        run: |
          docker build -t gofile-dl:test .
        if: always()

      - name: Run tests
        run: |
          pytest -xvs
        if: always()

      - name: Upload MegaLinter artifacts
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log
