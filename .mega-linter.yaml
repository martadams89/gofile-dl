# MegaLinter configuration optimized for Python Docker applications
APPLY_FIXES: all

# Enable only relevant linters for Python Docker applications
ENABLE:
  - PYTHON # Python files
  - DOCKERFILE # Dockerfile
  - YAML # For docker-compose.yml and config files
  - MARKDOWN # For documentation
  - JSON # For config files
  - BASH # For shell scripts

# Specific linter configuration
PYTHON_BLACK_ARGUMENTS: "--line-length 100"
PYTHON_FLAKE8_ARGUMENTS: "--max-line-length 100 --extend-ignore=E203"
PYTHON_ISORT_ARGUMENTS: "--profile black"
PYTHON_PYLINT_ARGUMENTS: "--disable=C0103,C0111,R0903,W0212 --max-line-length=100"
DOCKERFILE_HADOLINT_ARGUMENTS: "--ignore DL3008 --ignore DL3013 --ignore DL3018 --ignore DL3003"

# Exclude directories and files
FILTER_REGEX_EXCLUDE: '(\.venv|venv|\.git|\.pytest_cache|__pycache__|\.mypy_cache|\.docker)'
PYTHON_FLAKE8_FILTER_REGEX_EXCLUDE: '(\.venv|venv|test_.*\.py)'
PYTHON_PYLINT_FILTER_REGEX_EXCLUDE: '(\.venv|venv|test_.*\.py)'

# Performance optimization
PARALLEL: true
SHOW_ELAPSED_TIME: true
FILEIO_REPORTER: false
GITHUB_COMMENT_REPORTER: false

# Security scanning
PYTHON_BANDIT_ARGUMENTS: "--recursive --exclude .venv,venv,tests"

# Code duplication detection
PYTHON_CPDB_ARGUMENTS: "--min-tokens 60 --ignore-literals"

# Documentation checker
MARKDOWN_MARKDOWNLINT_CONFIG_FILE: .markdownlint.json

# Autoformat Python files
PYTHON_BLACK_DISABLE_ERRORS: false
PYTHON_ISORT_DISABLE_ERRORS: false
