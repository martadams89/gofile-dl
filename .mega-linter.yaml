# MegaLinter configuration optimized for Python Docker applications
APPLY_FIXES: all

# Enable only relevant linters for Python Docker applications
ENABLE:
  - PYTHON # Python files
  - DOCKERFILE # Dockerfile
  - YAML # For docker-compose.yml and config files
  - MARKDOWN # For documentation
  - JSON # For config files
  - BASH # For shell scripts

# Specific linter configuration
PYTHON_BLACK_ARGUMENTS: "--line-length 100"
PYTHON_FLAKE8_ARGUMENTS: "--max-line-length 100 --extend-ignore=E203,E501"
PYTHON_ISORT_ARGUMENTS: "--profile black"
PYTHON_PYLINT_ARGUMENTS: "--disable=C0103,C0111,R0903,W0212,import-error --max-line-length=100"
DOCKERFILE_HADOLINT_ARGUMENTS: "--ignore DL3008 --ignore DL3013 --ignore DL3018 --ignore DL3003"

# Fixed mypy arguments
PYTHON_MYPY_ARGUMENTS: "--ignore-missing-imports --no-strict-optional"

# Fixed pyright arguments
PYTHON_PYRIGHT_ARGUMENTS: "--skipunannotated"

# Fixed bandit arguments
PYTHON_BANDIT_ARGUMENTS: "--recursive --exclude .venv,venv,tests --skip B104,B105"

# Exclude directories and files
FILTER_REGEX_EXCLUDE: '(\.venv|venv|\.git|\.pytest_cache|__pycache__|\.mypy_cache|\.docker)'

# File-specific flake8 rules
PYTHON_FLAKE8_FILTER_REGEX_EXCLUDE: '(\.venv|venv|test_.*\.py)'
PYTHON_FLAKE8_ARGUMENTS_PER_MATCH:
  "run.py": "--max-line-length 120 --extend-ignore=E501"

PYTHON_PYLINT_FILTER_REGEX_EXCLUDE: '(\.venv|venv|test_.*\.py)'

# Performance optimization
PARALLEL: true
SHOW_ELAPSED_TIME: true
FILEIO_REPORTER: false
GITHUB_COMMENT_REPORTER: false

# Use existing configuration files
PYTHON_FLAKE8_CONFIG_FILE: .flake8
PYTHON_MYPY_CONFIG_FILE: .mypy.ini
PYTHON_BANDIT_CONFIG_FILE: .bandit.yml

# Disable certain linters or error types
DISABLE_LINTERS:
  - COPYPASTE # Disable copy-paste detection
  - SPELL # Disable spell checking
